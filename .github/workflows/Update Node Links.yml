name: Update Node Links

on:
  schedule:
    - cron: '0 0 * * *'  # 每天午夜自动运行一次
  workflow_dispatch:  # 支持手动触发

jobs:
  update-nodes:
    runs-on: ubuntu-latest

    steps:
    # 检出代码库
    - name: Checkout repository
      uses: actions/checkout@v3

    # 从本地文件分析 vmess 和 vless 节点
    - name: Fetch and Update v2ray and vless Nodes from Local File
      run: |
        # 检查文件是否存在
        if [ ! -f "webpage_content.txt" ]; then
          echo "webpage_content.txt 文件不存在！"
          exit 1
        fi

        # 读取网页内容文件
        WEBPAGE_CONTENT=$(cat webpage_content.txt)

        # 从文件中提取 vmess 节点
        VMESS_NODES=$(echo "$WEBPAGE_CONTENT" | grep -oP 'vmess://[^"]+' | sed 's/<[^>]*>//g' | sort -u)
        # 保存提取的 vmess 节点到临时文件
        echo "$VMESS_NODES" > vmess_nodes_temp.txt

        # 从文件中提取 vless 节点
        VLESS_NODES=$(echo "$WEBPAGE_CONTENT" | grep -oP 'vless://[^"]+' | sed 's/<[^>]*>//g' | sort -u)
        # 保存提取的 vless 节点到临时文件
        echo "$VLESS_NODES" > vless_nodes_temp.txt

        # 合并 vmess 和 vless 节点
        ALL_NODES=$(echo -e "$VMESS_NODES\n$VLESS_NODES")

        # 检查文件是否需要更新
        if [ -f "dizhi1.txt" ]; then
          # 使用 cmp 比较文件内容
          if cmp -s "dizhi1.txt" <(echo "$ALL_NODES"); then
            echo "v2ray 和 vless 节点没有变化，跳过更新。"
            exit 0
          fi
        fi

        # 更新 dizhi1.txt 文件
        echo "$ALL_NODES" > dizhi1.txt
        echo "v2ray 和 vless 节点更新成功。"

    # 从本地文件分析 ss 节点
    - name: Fetch and Update ss Nodes from Local File
      run: |
        # 检查文件是否存在
        if [ ! -f "webpage_content.txt" ]; then
          echo "webpage_content.txt 文件不存在！"
          exit 1
        fi

        # 读取网页内容文件
        WEBPAGE_CONTENT=$(cat webpage_content.txt)

        # 从文件中提取 ss 节点
        SS_NODES=$(echo "$WEBPAGE_CONTENT" | grep -oP 'ss://[^"]+' | sed 's/<[^>]*>//g' | sort -u)
        # 保存提取的 ss 节点到临时文件
        echo "$SS_NODES" > ss_nodes_temp.txt

        # 检查文件是否需要更新
        if [ -f "dizhi2.txt" ]; then
          # 使用 cmp 比较文件内容
          if cmp -s "dizhi2.txt" <(echo "$SS_NODES"); then
            echo "ss 节点没有变化，跳过更新。"
            exit 0
          fi
        fi

        # 更新 dizhi2.txt 文件
        echo "$SS_NODES" > dizhi2.txt
        echo "ss 节点更新成功。"

    # 拉取远程更改并提交本地更改
    - name: Pull remote changes and commit updates
      run: |
        git pull origin main --rebase # 拉取远程仓库的更改并重基（保持提交历史整洁）
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add dizhi1.txt dizhi2.txt vmess_nodes_temp.txt vless_nodes_temp.txt ss_nodes_temp.txt
        git commit -m "Update nodes data"
        git push origin main
