name: Update Node Links

on:
  schedule:
    - cron: '0 0 * * *'  # 每天午夜自动运行一次
  workflow_dispatch:  # 支持手动触发

jobs:
  update-nodes:
    runs-on: ubuntu-latest

    steps:
    # 检出代码库
    - name: Checkout repository
      uses: actions/checkout@v3

    # 获取网页内容并保存为文件
    - name: Fetch and Save Webpage Content
      run: |
        # 获取v2ray和vless节点页面内容并保存为文件
        VMESS_URL="https://github.com/Alvin9999/new-pac/wiki/v2ray%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7"
        SS_URL="https://github.com/Alvin9999/new-pac/wiki/ss%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7"
        
        # 保存v2ray内容到文件
        curl -s "$VMESS_URL" -o webpage_content.txt
        echo "Webpage content saved to webpage_content.txt"

        # 保存ss内容到文件
        curl -s "$SS_URL" -o ss_webpage_content.txt
        echo "SS webpage content saved to ss_webpage_content.txt"

    # 获取 v2ray 节点并更新 dizhi1.txt
    - name: Fetch and Update v2ray Nodes
      run: |
        # 从保存的网页内容文件中提取 vmess 和 vless 节点
        VMESS_NODES=$(grep -oP 'vmess://[^"]+' webpage_content.txt | sort -u)
        VLESS_NODES=$(grep -oP 'vless://[^"]+' webpage_content.txt | sort -u)

        # 合并 v2ray 和 vless 节点并保存
        echo "$VMESS_NODES" > vmess_nodes_temp.txt
        echo "$VLESS_NODES" >> vmess_nodes_temp.txt
        echo "v2ray and vless nodes saved to vmess_nodes_temp.txt"

        # 检查文件是否需要更新
        if [ -f "dizhi1.txt" ]; then
          EXISTING_VMESS_NODES=$(cat dizhi1.txt)
          if [ "$EXISTING_VMESS_NODES" == "$VMESS_NODES" ]; then
            echo "v2ray nodes have not changed, skipping update."
            exit 0
          fi
        fi

        # 更新 dizhi1.txt 文件
        echo "$VMESS_NODES" > dizhi1.txt
        echo "v2ray nodes updated successfully."

    # 获取 ss 节点链接并更新 dizhi2.txt
    - name: Fetch and Update ss Nodes
      run: |
        # 从保存的ss网页内容文件中提取 ss 节点
        SS_NODES=$(grep -oP 'ss://[^"]+' ss_webpage_content.txt | sort -u)

        # 检查文件是否需要更新
        if [ -f "dizhi2.txt" ]; then
          EXISTING_SS_NODES=$(cat dizhi2.txt)
          if [ "$EXISTING_SS_NODES" == "$SS_NODES" ]; then
            echo "ss nodes have not changed, skipping update."
            exit 0
          fi
        fi

        # 更新 dizhi2.txt 文件
        echo "$SS_NODES" > dizhi2.txt
        echo "ss nodes updated successfully."

    # 提交文件更新
    - name: Commit and Push changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add dizhi1.txt dizhi2.txt vmess_nodes_temp.txt ss_webpage_content.txt webpage_content.txt
        git commit -m "Update nodes data"
        git push
